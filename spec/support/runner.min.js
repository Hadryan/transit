(function(){describe("Transit",function(){return it("creates a global object",function(){return expect(window.Transit).toBeDefined()}),describe("on .manage with model",function(){return beforeEach(function(){return this.item=new Transit.Deliverable,this.manage=Transit.manage(this.item)}),it("returns an instance of the manager",function(){return expect(this.manage instanceof Transit.Manager).toBeTruthy()}),it("renders the interface",function(){return expect($("#transit_ui")).toHaveSize(1)})}),describe("the .one event handler",function(){return beforeEach(function(){return this.callback=sinon.spy(),Transit.one("spec:init",this.callback),Transit.trigger("spec:init"),Transit.trigger("spec:init")}),it("only runs the callback once",function(){return expect(this.callback.callCount).toEqual(1)})})})}).call(this),function(){describe("Cache",function(){var e;return it("attaches itself to Transit",function(){return expect(Transit.cache).toBeDefined()}),e=function(e){return Transit.get("context",e)},it("stores items as an object, by type",function(){return expect(Transit.cache.context).toBeDefined()}),describe("when an item is added",function(){return beforeEach(function(){return Transit.set("context","Sample","test")}),it("is stored by the specified type",function(){return expect(Transit.cache.context.sample).toBeDefined()}),it("automatically lowercases the type",function(){return expect(Transit.cache.context.Sample).toBeUndefined()})}),describe("when a item is requested",function(){return describe("and the item exists",function(){return beforeEach(function(){return Transit.set("context","Sample","test")}),it("returns the item",function(){return expect(e("sample")).toBe("test")}),describe("and the item does not exist",function(){return it("returns null",function(){return expect(e("missing")).toBeNull()})})})})})}.call(this),function(){describe("Transit.browser",function(){})}.call(this),function(){describe("Selection",function(){})}.call(this),function(){describe("Templates",function(){var e;return e=function(e){return Transit.Template.pathify(e)},beforeEach(function(){return Transit.Template.url="/transit/views"}),it("has a class level cache",function(){var e;return e=_.isObject(Transit.Template.cache),expect(e).toBeTruthy()}),describe("@pathify",function(){return beforeEach(function(){return this.pathname="/transit/views/core/test.jst"}),describe("when a path includes view_path",function(){return beforeEach(function(){return this.result=e("/transit/views/core/test.jst")}),it("returns the orignal path",function(){return expect(this.result).toEqual(this.pathname)})}),describe("when a path does not include view_path",function(){return beforeEach(function(){return this.result=e("/core/test.jst")}),it("returns the path including view_path",function(){return expect(this.result).toEqual(this.pathname)})})}),describe("template caching",function(){return describe("when a view is set with .set",function(){return beforeEach(function(){return Transit.Template.set("/spec/set.jst","test"),this.template=Transit.Template.find("/spec/set.jst")}),it("should cache the set template",function(){return expect(this.template).toBeDefined()}),it("sets the template path from the path",function(){return expect(this.template.path).toEqual("/transit/views/spec/set.jst")}),it("sets the source from the source",function(){return expect(this.template.source).toEqual("test")}),it("generates a compiled function",function(){return expect(this.template.func instanceof Function).toBeTruthy()})}),describe("compile",function(){return beforeEach(function(){return this.template=Transit.Template.compile("test")}),it("generates a compiled template",function(){return expect(this.template instanceof Function).toBeTruthy()})})})})}.call(this),function(){describe("Manager window",function(){return beforeEach(function(){return this.item=new Transit.Deliverable,this.manager=Transit.manage(this.item),this.heading=this.manager.$("h1")}),it("is an instance of a Backbone.View",function(){return expect(this.manager instanceof Backbone.View).toBeTruthy()})})}.call(this),function(){describe("Modal",function(){var e;return e=null,describe("any instance",function(){return describe(".perform",function(){var t;return t=null,beforeEach(function(){return t=jasmine.createSpy("perform"),Transit.one("modal:action",t),e=Transit.modal(),e.perform(mockEvent({currentTarget:$('<a data-action="test"></a>')}))}),it("triggers modal:action globally",function(){return expect(t).toHaveBeenCalled()}),it("passes the action and the modal to the callback",function(){return expect(t).toHaveBeenCalledWith("test",e)})})})})}.call(this),function(){describe("Notify",function(){return it("has an error method",function(){return expect(Transit.Notify.error).toBeDefined()}),it("has an info method",function(){return expect(Transit.Notify.info).toBeDefined()}),it("has a success method",function(){return expect(Transit.Notify.success).toBeDefined()})})}.call(this),function(){describe("Toolbar panels",function(){var e,t,n,r,i,s,o,u;return r=new Transit.Panel,i=new Transit.Panel,e=new Transit.Deliverable,u=null,s=null,o=null,t=null,n=null,beforeEach(function(){return n=Transit.manage(e),n.render(),s=n.toolBar.$("div.panels"),u=n.toolBar.tabBar}),describe("Panels",function(){return describe("calling Manager.add",function(){return o=null,beforeEach(function(){return n.toolBar.add(r),o=u.tabs[r.cid]}),it("adds a tab to the tab bar",function(){return expect(u.el).toContain("li")}),it("adds a panel to the panels list",function(){return expect($("div.transit-panel",s)).toHaveSize(1)}),describe("the added tab",function(){return it("contains a link with the panel's title",function(){return expect(o.find("a")).toHaveText("Detail")})}),afterEach(function(){return r.remove()})}),describe("calling .remove on a panel",function(){return beforeEach(function(){return n.toolBar.add(r),r.remove(),s=n.$("div.panels")}),it("removes the panel",function(){return expect(s.find("div.transit-panel")).toHaveSize(0)}),it("removes the associated tab",function(){return expect($("li",u.el)).toHaveSize(0)})})})})}.call(this),function(){describe("toolBar",function(){var e,t,n,r;return t=new Transit.Deliverable,e=null,n=null,r=null,beforeEach(function(){return n=Transit.manage(t),n.render(),r=n.toolBar,e=r.$("h1")}),it("creates a view for toolBar",function(){return expect(r instanceof Backbone.View).toBeTruthy()}),it("creates a heading node",function(){return expect(r.$("h1").length).toNotEqual(0)}),it("creates a tab-bar list",function(){return expect(r.$("ul.transit-nav-bar").length).toNotEqual(0)}),it("creates a tab bar instance",function(){return expect(r.tabBar).toBeDefined()}),describe("Panels",function(){var e,t,n,i;return e=function(){return r.$el.find(i)},t=new Transit.Panel,n=new Transit.Panel,i="",beforeEach(function(){return i="#transit_panel_"+t.cid}),describe("adding panels with Toolbar.add",function(){return it("adds a panel to the toolbar node",function(){var e=this;return Transit.one("panel:added",function(){return expect(r.$el).toContain(i)}),r.add(t)}),it("adds a tab to the toolbar's tabBar",function(){var e=this;return Transit.one("panel:added",function(){return expect(r.tabBar.find(t.cid)).toBeDefined()}),r.add(t)})}),describe("removing panels with Toolbar.remove",function(){return afterEach(function(){return r.reset()}),describe("when there is only one panel",function(){return beforeEach(function(){return r.reset()}),it("removes the panel by object",function(){return runs(function(){return r.add(t)}),waits(200),runs(function(){return r.remove(t)}),waits(200),expect(r.$el.find(i)).toHaveSize(0)}),it("removes the panel by cid",function(){return runs(function(){return r.add(t)}),waits(200),runs(function(){return r.remove(t.cid)}),waits(200),runs(function(){return expect(r.$el.find(i)).toHaveSize(0)})}),it("removes the associated tab",function(){return waits(200),runs(function(){return r.remove(t)}),expect(r.tabBar.el.find("li")).toHaveSize(0)})}),describe("when there are multiple panels",function(){return beforeEach(function(){return r.add(t,n),waits(200),runs(function(){return r.remove(t)})}),it("removes only the requested panel",function(){return expect(r.$el.find("div.transit-panel")).toHaveSize(1)}),it("removes only the associated tab",function(){return expect(r.tabBar.el.find("li")).toHaveSize(1)})})}),describe("removing all panels with Toolbar.reset",function(){var e;return e=null,beforeEach(function(){return e=spyOn(r.tabBar,"remove"),r.add(t,n),waits(100),runs(function(){return r.reset()})}),it("removes all panels",function(){return expect(r.$el.find("div.transit-panel")).toHaveSize(0)}),it("removes all tabs",function(){return expect(e).toHaveBeenCalledWith(t.cid)})})}),describe(".set",function(){return describe('with "heading"',function(){return beforeEach(function(){return r.set("heading","Test")}),it("sets the toolbar heading",function(){return expect(e.text()).toEqual("Test")})})})})}.call(this),function(){describe("Uploader",function(){})}.call(this),function(){describe("Asset",function(){})}.call(this),function(){describe("Assets",function(){})}.call(this),function(){var e={}.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};describe("Context",function(){var e;return e=function(e){function n(){return n.__super__.constructor.apply(this,arguments)}return t(n,e),n}(Transit.View),describe("any instance",function(){return beforeEach(function(){return this.item=new Transit.Context}),it("assigns a .type value from the name",function(){return expect(this.item.type).toEqual("Context")}),it("assigns the _type attribute from the name",function(){return expect(this.item.type).toEqual("Context")}),it("assigns a view object",function(){return expect(this.item.view).toBeDefined()}),describe("when it has a view element",function(){return beforeEach(function(){return Transit.Context.view=e,this.item=new Transit.Context}),it("creates a view from that element",function(){return expect(this.item.view).toBeInstanceOf(e)})}),describe("when it does not have a view element",function(){return it("creates a view from Transit.View",function(){return expect(this.item.view).toBeInstanceOf(Transit.View)})})}),describe("a subclass",function(){var e;return e=function(e){function n(){return n.__super__.constructor.apply(this,arguments)}return t(n,e),n}(Transit.Context),beforeEach(function(){return this.audio=new e}),it("assigns a .type value from the name",function(){return expect(this.audio.type).toEqual("Audio")}),it("assigns the _type attribute from the name",function(){return expect(this.audio.get("_type")).toEqual("Audio")}),it("inherits defaults",function(){return expect(_.has(this.audio.defaults,"position")).toBeTruthy()}),describe("when no view is defined",function(){return it("assigns a context view object",function(){return expect(this.audio.view).toBeInstanceOf(Backbone.View)})}),describe("when a view is defined",function(){return beforeEach(function(){return Transit.set("view","Audio",function(){})}),it("assigns a view object",function(){return expect(this.audio.view).toBeDefined()}),afterEach(function(){return delete Transit.cache.view.audio})})})})}.call(this),function(){describe("Context collections",function(){})}.call(this),function(){describe("Deliverable",function(){var e;return e=new Transit.Deliverable,describe("any instance",function(){return it("creates a contexts object",function(){return expect(e.contexts).toBeDefined()}),it(".contexts is a Contexts collection",function(){return expect(e.contexts instanceof Transit.Contexts).toBeTruthy()})}),describe("building contexts from attributes",function(){return beforeEach(function(){return e.set("contexts",[{name:"first",_type:"Context"},{name:"second",_type:"Context"}])}),it("converts the attributes to a collection",function(){return expect(e.contexts.length).toEqual(2)}),it("removes the contexts attribute",function(){return expect(e.get("contexts")).toBeUndefined()}),afterEach(function(){return e.contexts=new Transit.Contexts})}),describe("generating json",function(){var t;return t=[],beforeEach(function(){return e.set("contexts",[{name:"first",_type:"Context"},{name:"second",_type:"Context"}]),t=e.toJSON().page}),it("creates a key from Transit.Contexts.build_as",function(){return expect(t.contexts_attributes).toBeDefined()}),it("uses context data as the value(s)",function(){return expect(_.size(t.contexts_attributes)).toEqual(2)})})})}.call(this),function(){describe("Asset Manager",function(){})}.call(this),function(){describe("the base view",function(){return beforeEach(function(){return this.model=new Transit.Context({id:1}),this.view=new Transit.View({model:this.model})}),it("should inherit Backbone.View",function(){return expect(this.view).toBeInstanceOf(Backbone.View)}),describe("its element",function(){return beforeEach(function(){return this.result=this.view.render().$el}),it("should add data-context-type with the model's type",function(){return expect(this.result.data("context-type")).toBeDefined(),expect(this.result.data("context-type")).toEqual("Context")}),it("should add data-context-id with the model's id",function(){return expect(this.result.data("context-id")).toBeDefined(),expect(this.result.data("context-id")).toEqual(1)})})})}.call(this)